<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd       
	  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
      http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
	<!-- This will automatically locate any and all property files you have 
		within your classpath, provided they fall under the META-INF/spring directory. 
		The located property files are parsed and their values can then be used within 
		application context files in the form of ${propertyKey}. -->


	<bean class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" id="dataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="1800000" />
		<property name="numTestsPerEvictionRun" value="3" />
		<property name="minEvictableIdleTimeMillis" value="1800000" />
		<!-- <property name="defaultCatalog" value="${hibernate.default_schema}" 
			/> -->
	</bean>

	 <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" /> 
	<!-- mode="aspectj" -->


	<bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform" value="${hibernate.dialect}" />
		<property name="generateDdl" value="${hibernate.generateDdl}" />
		<property name="showSql" value="${hibernate.showSql}" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="persistenceUnit" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />

		<property name="jpaPropertyMap">
			<map>
				<!-- <entry key="hibernate.current_session_context_class" value="jta"/> 
					<entry key="hibernate.transaction.manager_lookup_class" value="fr.iut.biatoss.srv.util.xa.SpringJTATransactionManagerLookup"/> 
					<entry key="hibernate.transaction.flush_before_completion" value="true"/> 
					<entry key="hibernate.transaction.auto_close_session" value="true"/> <entry 
					key="hibernate.connection.release_mode" value="auto"/> -->

				<entry key="hibernate.default_schema" value="${hibernate.default_schema}" />
				<entry key="hibernate.hbm2ddl.auto" value="${hibernate.hbm2ddl.auto}" />
			</map>
		</property>
	</bean>

	<!-- <bean id="initSpringJTATransactionManagerLookup" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"> 
		<property name="staticMethod"> <value>fr.iut.biatoss.srv.util.xa.SpringJTATransactionManagerLookup.setJtaTransactionManager</value> 
		</property> <property name="arguments"> <list> <ref bean="jtaTransactionManager"/> 
		</list> </property> </bean> depends-on="initSpringJTATransactionManagerLookup" -->


</beans>
